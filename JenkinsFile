pipeline {
    agent any

    environment{
        NETLIFY_SITE_ID = 'b2c1b873-d345-4dbe-9b24-3c3aa1c441fe'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')

    }

    stages {
        // comment
        /*
        line1
        line2
        */
        
        stage('Build') {
            agent{
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }           

            
            steps {
                sh '''
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        
        }
        
        stage('Run Tests'){
            parallel{
                stage('Test'){
                    agent{
                        docker {
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }            
                    steps{
                        sh '''
                            #echo "test stage"
                            test -e build/index.html
                            npm test
                        '''
                    }
                    post {
                        always {
                            junit 'jest-results/junit.xml'
                            
                        }
                    }                    
                }

                stage('E2E'){
                    agent{
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                        }
                    }            
                    steps{
                        /*
                        for global:
                        npm install -g serve
                        serve -s build
                        .
                        .
                        .
                        */
                        sh '''
                        
                            npm install serve
                            node_modules/.bin/serve -s build &
                            sleep 10
                            npx playwright test --reporter=html

                        '''
                    }
                    post {
                        always {
                            
                            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }                    
                }                
                
            }
        }
        stage('Deploy staging') {
            agent{
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }           

            //SMALL CHANGE
            steps {
                sh '''
                    npm install netlify-cli
                    node_modules/.bin/netlify --version
                    node_modules/.bin/netlify status
                    echo "Deploying to production. Site ID: $NETLIFY_SITE_ID"
                    node_modules/.bin/netlify deploy --dir=build
                '''
            }
        
        }
        stage('Approval'){
            steps{
                timeout(time: 15, unit: 'MINUTES') {
                    input message: 'Do you wish to deploy to production ?', ok: 'Yes, I am sure!'
                }
            }
        }
        stage('Deploy prod') {
            agent{
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }           

            //SMALL CHANGE
            steps {
                sh '''
                    npm install netlify-cli
                    node_modules/.bin/netlify --version
                    node_modules/.bin/netlify status
                    echo "Deploying to production. Site ID: $NETLIFY_SITE_ID"
                    node_modules/.bin/netlify deploy --dir=build --prod
                '''
            }
        
        }        
        stage('Prod E2E'){
            agent{
                docker {
                    image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                    reuseNode true
                }
            }
            environment{
                CI_ENVIRONMENT_URL = 'https://euphonious-custard-5d48f4.netlify.app'
            }            
            steps{

                sh '''
                
                    npx playwright test --reporter=html

                '''
            }
            post {
                always {
                    
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'HTML Report-2', reportTitles: '', useWrapperFileDirectly: true])
                }
            }                
        
        
        }
    }

    
}
